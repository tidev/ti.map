---
name: Modules.Map.View
summary: Map view is used for embedding native mapping capabilities as a view in your application.
description: |
    With native maps, you can control the mapping location, the type of map, the zoom level
    and you can add custom annotations and routes directly to the map. Once the map view is
    displayed, the user can pan, zoom and tilt the map using the native control gestures.

    Use the <Modules.Map.createView> method to create a map view.

    In Alloy, use the **`<Module>`** element with the `module` attribute set to `ti.map`
    and `method` attribute set to `createView` to create a map view in XML markup:

    ``` xml
    <Module module="ti.map" method="createView" />
    ```

    All latitude and longitude values are specified in decimal degrees. Values in degrees,
    minutes and seconds (DMS) must be converted to decimal degrees before being passed to
    the map view.

    You can add [Annotation](Modules.Map.Annotation) objects to the map to mark points of
    interest. An annotation has two states: selected and deselected. A deselected annotation
    is marked by a pin image. When selected, the full annotation is displayed, typically
    including a title and an optional subtitle.

    You can add [Route](Modules.Map.Route) objects to the map to create paths between
    two or more points of interest.

    To use the `userLocation` property in iOS 8 and later, add either the
    [`NSLocationWhenInUseUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW26)
    or
    [`NSLocationAlwaysUsageDescription`](https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW18)
    key to the iOS plist section of the project's `tiapp.xml` file.

    ``` xml
    <ti:app>
        <ios>
            <plist>
                <dict>
                    <key>NSLocationAlwaysUsageDescription</key>
                    <string>
                        Specify the reason for accessing the user's location information.
                        This appears in the alert dialog when asking the user for permission to
                        access their location.
                    </string>
                </dict>
            </plist>
        </ios>
    </ti:app>
    ```
extends: Titanium.UI.View
excludes:
    events: [ 'singletap', 'doubletap', 'dblclick', 'longpress', 'pinch',
              'swipe', 'touchstart', 'touchend', 'touchcancel', 'touchmove', 'twofingertap' ]
since: { android: "3.1.0", iphone: "3.2.0", ipad: "3.2.0", macos: "9.2.0" }
platforms: [android, iphone, ipad, macos]
methods:
  - name: addAnnotation
    summary: Adds a new annotation to the map.
    parameters:
      - name: annotation
        summary: a <Modules.Map.Annotation> instance.
        type: Modules.Map.Annotation

  - name: addAnnotations
    summary: Adds one or more new annotations to the map.
    parameters:
      - name: annotations
        summary: |
            Array of [Annotation](Modules.Map.Annotation) objects
        type: Array<Modules.Map.Annotation>

  - name: addRoute
    summary: Adds a route to the map.
    parameters:
      - name: route
        summary: Modules.Map.Route
        type: Modules.Map.Route

  - name: addHeatmap
    summary: Adds a heatmap to the map.
    description: A heatmap is defined by an array of coordinates.
    parameters:
      - name: coordinates
        summary: An array of coordinates
        type: MapPointType
    platforms: [android]
    since: "10.1.0"

  - name: containsCoordinate
    summary: |
        Validated whether or not a given coordinate is currently visible
        in the map rect.
    parameters:
      - name: coordinate
        summary: The `latitude` and `longitude` pair represented by an Object.
        type: MapPointType
    returns:
        type: Boolean
        summary: Returns `true` if given coordinate is within the displayed map view.
    since: 10.1.0

  - name: deselectAnnotation
    summary: |
        Deselects the specified annotation, so the main annotation is hidden and only
        a pin image is shown.
    parameters:
      - name: annotation
        summary: Annotation to deselect, identified by an annotation title or a <Modules.Map.Annotation> reference.
        type: [String,Modules.Map.Annotation]

  - name: removeAllAnnotations
    summary: Removes all annotations from the map.

  - name: removeAnnotation
    summary: Removes an existing annotation from the map.
    parameters:
      - name: annotation
        summary: Annotation to remove, identified by an annotation title or a <Modules.Map.Annotation> reference.
        type: [String, Modules.Map.Annotation]

  - name: removeAnnotations
    summary: Removes one or more existing annotations from the map.
    description: |
        Annotations can be identified by title or by a <Modules.Map.Annotation>
        reference.
    parameters:
      - name: annotations
        summary: Array of annotations to remove.
        type: [Array<String>, Array<Modules.Map.Annotation>]

  - name: removeRoute
    summary: Remove a previously added route.
    parameters:
      - name: route
        summary: An instance of <Modules.Map.Route>
        type: Modules.Map.Route

  - name: selectAnnotation
    summary: Selects the annotation, showing the full annotation.
    parameters:
      - name: annotation
        summary: Annotation to show, identified by an annotation title or a <Modules.Map.Annotation> reference.
        type: [String, Modules.Map.Annotation]

  - name: setMapType
    summary: Sets the type of map (satellite, normal, or terrain).
    parameters:
      - name: mapType
        summary: |
            Map type constant, either <Modules.Map.NORMAL_TYPE>, <Modules.Map.SATELLITE_TYPE>,
            <Modules.Map.TERRAIN_TYPE>, <Modules.Map.HYBRID_TYPE>, <Modules.Map.HYBRID_FLYOVER_TYPE> or
            <Modules.Map.SATELLITE_FLYOVER_TYPE>.
        type: Number

  - name: setLocation
    summary: Sets the map location and zoom level.
    description: |
        The location is set using a simple dictionary object, described in <MapLocationTypeV2>. If `latitudeDelta`
        and `longitudeDelta` are set, these specified parameters bound the area of interest, which is centered
        and displayed at the greatest possible zoom level. This method can only be called after the map
        completes loading. Before that, use [region](Modules.Map.View.region) to set the map location.
        For example:

        ``` javascript
        myMapView.setLocation({
          latitude: 37.337681,
          longitude: -122.038193,
          animate: true,
          latitudeDelta: 0.04,
          longitudeDelta: 0.04
        });
        ```
    parameters:
      - name: location
        summary: |
            Dictionary specifying the location and the zoom level for the map.
        type: MapLocationTypeV2
    since: "3.1.0"

  - name: zoom
    summary: Zooms in or out of the map.
    description: |
        Zooms in or out by specifying a relative zoom level. A positive value increases
        the current zoom level and a negative value decreases the zoom level.

        Each increase in zoom level increases the magnification by a factor of two.
    parameters:
      - name: level
        summary: Relative zoom level (positive to zoom in, negative to zoom out).
        type: Number
    since: "3.1.0"

  - name: snapshot
    summary: Takes a snapshot of the map
    description: |
         Takes a snapshot of the current map and returns the image via [onsnapshotready](Modules.Map.View.onsnapshotready) event.
    since: "3.2.3"
    platforms: [android]

  - name: animateCamera
    summary: Changes the camera used for determining the map's viewing parameters and animates the change.
    parameters:
      - name: animationParams
        summary: |
            Properties for controlling the camera animation. The property `camera` is required.
        type: CameraAnimationParams

      - name: callback
        summary: |
            A method that will be called when the camera animation completes. Optionally, the completion
            of camera animations can be captured by listening for a `regionchanged` event with `animated`
            set to true.
        type: Callback<Object>
    since: { android: "9.1.0", iphone: "3.2.0", ipad: "3.2.0", macos: "9.2.0" }

  - name: showAnnotations
    summary: |
        Sets the visible region so that the map displays the specified annotations. If no array is passed
        annotations on the map will be shown. The default padding of 20px is applied and can be changed by
        using the <Modules.Map.View.padding> property.
    parameters:
      - name: annotations
        summary: |
            An array of <Modules.Map.Annotation> to display.
        type: Array<Modules.Map.Annotation>
        optional: true
    since: { android: "8.0.0", iphone: "3.2.0", ipad: "3.2.0", macos: "9.2.0" }

  - name: addPolygon
    summary: Adds a new polygon to the map.
    parameters:
      - name: polygon
        summary: a <Modules.Map.Polygon> instance.
        type: Modules.Map.Polygon

  - name: addPolygons
    summary: Adds one or more new polygons to the map.
    parameters:
      - name: polygons
        summary: |
            Array of [Polygons](Modules.Map.Polygon) objects
        type: Array<Modules.Map.Polygon>

  - name: removePolygon
    summary: Remove a polygon from the map.
    parameters:
      - name: polygon
        summary: |
            A [Polygon](Modules.Map.Polygon) object
        type: Modules.Map.Polygon

  - name: removeAllPolygons
    summary: Remove all polygons from the map.

  - name: addPolyline
    summary: Adds a new polylines to the map.
    parameters:
      - name: polygon
        summary: a <Modules.Map.Polyline> instance.
        type: Modules.Map.Polyline

  - name: addPolylines
    summary: Adds one or more new polylines to the map.
    parameters:
      - name: polylines
        summary: |
            Array of [Polyline](Modules.Map.Polyline) objects
        type: Array<Modules.Map.Polyline>

  - name: removePolyline
    summary: Remove a polyline from the map.
    parameters:
      - name: polyline
        summary: |
            An [Polyline](Modules.Map.Polyline) object
        type: Modules.Map.Polyline

  - name: removeAllPolylines
    summary: Remove all polylines from the map.

  - name: addCircle
    summary: Adds a new circle to the map.
    parameters:
      - name: circle
        summary: a <Modules.Map.Circle> instance.
        type: Modules.Map.Circle

  - name: addCircles
    summary: Adds one or more new circles to the map.
    exclude-platforms: [android]
    parameters:
      - name: circles
        summary: |
            Array of [Circle](Modules.Map.Circle) objects
        type: Array<Modules.Map.Circle>

  - name: removeCircle
    summary: Remove a circle from the map.
    parameters:
      - name: circle
        summary: |
            An [Circle](Modules.Map.Circle) object
        type: Modules.Map.Circle

  - name: removeAllCircles
    summary: Remove all circles from the map.

  - name: addImageOverlay
    summary: Adds a new image overlay to the map.
    since: { android: "7.4.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }
    parameters:
      - name: imageOverlay
        summary: A <Modules.Map.ImageOverlay> instance.
        type: Modules.Map.ImageOverlay

  - name: addImageOverlays
    summary: Adds one or more new image overlays to the map.
    since: { android: "7.4.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }
    parameters:
      - name: imageOverlays
        summary: |
            Array of [ImageOverlay](Modules.Map.ImageOverlay) objects
        type: Array<Modules.Map.ImageOverlay>

  - name: removeImageOverlay
    summary: Remove an image overlay from the map.
    since: { android: "7.4.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }
    parameters:
      - name: imageOverlay
        summary: |
            An [ImageOverlay](Modules.Map.ImageOverlay) object
        type: Modules.Map.ImageOverlay

  - name: removeAllImageOverlays
    summary: Remove all image overlays from the map.
    since: { android: "7.4.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }

  - name: setClusterAnnotation
    summary: Set new cluster annotation for the clustered annotation.
    description: |
      This method should be called inside the `clusterstart` event.
      See the example "Map Example With Marker Annotation and Clustering".
    parameters:
      - name: clusterAnnotationParam
        summary: Properties for creating cluster annotation.
        type: ClusterAnnotationParams
    osver: { ios: { min: "11.0" } }
    since: { android: "7.4.0", iphone: "6.3.0", ipad: "6.3.0", macos: "9.2.0" }

events:
  - name: clusterstart
    summary: Fired when a collision between annotations occures.
    properties:
      - name: memberAnnotations
        summary: Array of annotations participating in clustering.
        type: Array<Modules.Map.Annotation>

      - name: map
        summary: This map view.
        type: Modules.Map.View
    exclude-platforms: [android]
    since: "6.3.0"

  - name: onsnapshotready
    summary: Fired when the snapshot is ready after [snapshot](Modules.Map.View.snapshot) is invoked.
    properties:
      - name: snapshot
        summary: snapshot of the current map
        type: Titanium.Blob
    platforms: [android]
    since: "3.2.3"

  - name: pinchangedragstate
    summary: Fired when the user interacts with a draggable annotation.
    properties:
      - name: annotation
        summary: Annotation being dragged.
        type: Modules.Map.Annotation

      - name: map
        summary: This map view.
        type: Modules.Map.View

      - name: title
        summary: Annotation title.
        type: String

      - name: newState
        summary: |
            New drag state for the annotation, one of
            [ANNOTATION_DRAG_STATE_NONE](Titanium.Map.ANNOTATION_DRAG_STATE_NONE),
            [ANNOTATION_DRAG_STATE_START](Titanium.Map.ANNOTATION_DRAG_STATE_START),
            [ANNOTATION_DRAG_STATE_DRAG](Titanium.Map.ANNOTATION_DRAG_STATE_DRAG),
            [ANNOTATION_DRAG_STATE_CANCEL](Titanium.Map.ANNOTATION_DRAG_STATE_CANCEL) or
            [ANNOTATION_DRAG_STATE_END](Titanium.Map.ANNOTATION_DRAG_STATE_END).
        type: Number

      - name: oldState
        summary: |
            Previous drag state for the annotation, one of
            [ANNOTATION_DRAG_STATE_NONE](Titanium.Map.ANNOTATION_DRAG_STATE_NONE),
            [ANNOTATION_DRAG_STATE_START](Titanium.Map.ANNOTATION_DRAG_STATE_START),
            [ANNOTATION_DRAG_STATE_DRAG](Titanium.Map.ANNOTATION_DRAG_STATE_DRAG),
            [ANNOTATION_DRAG_STATE_CANCEL](Titanium.Map.ANNOTATION_DRAG_STATE_CANCEL) or
            [ANNOTATION_DRAG_STATE_END](Titanium.Map.ANNOTATION_DRAG_STATE_END).
        type: Number
    since: "3.1.0"

  - name: click
    summary: |
        Fired when the user selects or deselects an annotation, a polygon, a polyline or a circle.
    description: |
        Note that the `click` event is not fired every time the user clicks on the map.
        It is fired in two circumstances:

        - The user clicks on the annotation. This will select the annotation.
        - The user deselects an annotation either by clicking on the map or another annotation.
        - The user clicks on a polygon, a polyline or a circle.

        Note that only one annotation can be selected at any given time.

        The `click` event includes a value, `clicksource`, which describes the part of the annotation
        that was clicked. The `clicksource` can be one of `pin`, `infoWindow`, `leftButton` or `rightButton`
        on iOS and `pin`, `title`, `subtitle`, `leftPane`, `rightPane`, `infoWindow` or `null` on Android.
        If the user deselects an annotation by clicking on the pin, `clicksource` is `pin`.
        If the user deselects the annotation by clicking elsewhere in the map view, `clicksource` is `map`.

        For polygon, polyline or circle, The `click` event includes the following values.
        `clicksource` is a string describing the shape type. `map` is the map view instance.
        `latitude` and `longtitude` is the corresponding coordinates on the map where the user
        clicked in the shape.
    properties:
      - name: title
        summary: Title of the annotation.
        type: String

      - name: subtitle
        summary: Subtitle of the annotation.
        type: String

      - name: map
        summary: The map view instance.
        type: Modules.Map.View

      - name: clicksource
        summary: |
            Source of the click event. Can be one of `pin`, `leftPane`, `rightPane`, `infoWindow` or `null`.
            If it's a shape, it can be one of `polygon`, `polyline`, or `circle`. On Android, this also applies
            for `title` and `subtitle`.
        type: String

      - name: annotation
        summary: Annotation source object.
        type: Modules.Map.Annotation

      - name: latitude
        summary: |
            Latitude of the clicked annotation or the point clicked in the polygon, polyline and circle.
        type: Number

      - name: longitude
        summary: |
            Longitude of the clicked annotation or the point clicked in the polygon, polyline and circle.
        type: Number

      - name: deselected
        summary: |
            Will show if the annotation was selected (false) or deselected (true)
        type: Boolean
        since: "4.5.0"

  - name: complete
    summary: Fired when the map completes loading.

  - name: mapclick
    summary: |
        Fired when the user clicks on the map
    description: |
        The `mapclick` event is fired when the user clicks on the map and returns the longitude/latitude of
        that position.
    properties:
      - name: map
        summary: The map view instance.
        type: Modules.Map.View

      - name: latitude
        summary: |
            Latitude of the clicked position.
        type: Number

      - name: longitude
        summary: |
            Longitude of the clicked position.
        type: Number
    since: "6.2.0"

  - name: regionwillchange
    since: { android: "6.2.0", iphone: "6.0.0", ipad: "6.0.0", macos: "9.2.0" }
    summary: |
        Fired when the mapping region will change.
    properties:
      - name: longitude
        summary: Longitude value for the center point of the map, in decimal degrees.
        type: Number

      - name: latitude
        summary: Latitude value for the center point of the map, in decimal degrees.
        type: Number

      - name: longitudeDelta
        summary: |
            The amount of east-to-west distance displayed on the map, measured in decimal degrees.
        since: "3.1.1"
        type: Number

      - name: latitudeDelta
        summary: |
            The amount of north-to-south distance displayed on the map, measured in decimal degrees.
        since: "3.1.1"
        type: Number

      - name: animated
        summary: |
            The regionwillchange event was caused by an `animation`, such as a animating the camera.
        since: "3.2.0"
        type: Boolean

      - name: reason
        summary: |
            The reason for the camera change, either <Modules.Map.REASON_API_ANIMATION>,
            <Modules.Map.REASON_DEVELOPER_ANIMATION> or <Modules.Map.REASON_GESTURE>.
        since: "6.0.0"
        type: Number
        platforms: [android]

  - name: regionchanged
    summary: |
        Fired when the mapping region finished changing.
    properties:
      - name: longitude
        summary: Longitude value for the center point of the map, in decimal degrees.
        type: Number

      - name: latitude
        summary: Latitude value for the center point of the map, in decimal degrees.
        type: Number

      - name: longitudeDelta
        summary: |
            The amount of east-to-west distance displayed on the map, measured in decimal degrees.
        since: "3.1.1"
        type: Number

      - name: latitudeDelta
        summary: |
            The amount of north-to-south distance displayed on the map, measured in decimal degrees.
        since: "3.1.1"
        type: Number

      - name: animated
        summary: |
            The regionchanged event was caused by an `animation`, such as a animating the camera.
        since: "3.2.0"
        type: Boolean
        exclude-platforms: [android]

  - name: longclick
    summary: |
        Fired when the user makes a long-press gesture on the map.
    description: |
        A long press is generated by touching and holding on the touch screen.

        The event occurs before the finger/button is lifted.

        The `longclick` event returns longitude and latitude of the point on the ground that was pressed.
    since: "3.2.0"
    properties:
      - name: latitude
        summary: latitude of the point on the ground that was pressed.
        type: Number

      - name: longitude
        summary: longitude of the point on the ground that was pressed.
        type: Number

      - name: map
        summary: The map view instance.
        type: Modules.Map.View

  - name: userLocation
    summary: |
        Fired when the user changes on the map.
    description: |
        When the user location is available or changes at the map it will fire the event.
    since: { android: "7.3.0" }
    properties:
      - name: latitude
        summary: Latitude of the point on the ground that was pressed.
        type: Number

      - name: longitude
        summary: Longitude of the point on the ground that was pressed.
        type: Number

  - name: poiclick
    summary: Fired when the user selects a Point of Interest (e.g. restaurant or hotel).
    description: | 
        Make sure to use the <Modules.Map.View.selectableMapFeatures> property to define
        annotations tha should be selectable. Available in iOS 16+
    since: "12.0.0"
    platforms: [iphone, ipad, macos]
    properties:
      - name: name
        summary: The descriptive name associated with the map item.
        type: String

      - name: featureType
        summary: |
            The type of map feature this annotation represents. See the [Apple docs](https://developer.apple.com/documentation/mapkit/mkmapfeaturetype)
            for all possible enum values.
        type: Number

      - name: pointOfInterestCategory
        summary: |
            The point-of-interest category for the map item. See the [Apple docs](https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory)
            for all possible enum values.
        type: Number

      - name: phoneNumber
        summary: The phone number associated with a business at the specified location.
        type: String

      - name: url
        summary: The URL associated with the specified location.
        type: String

      - name: place
        summary: The placemark object containing the location information.
        type: Object

      - name: latitude
        summary: Latitude of the annotation that was selected.
        type: Number

      - name: longitude
        summary: Longitude of the annotation that was selected.
        type: Number

properties:
  - name: animate
    summary: Indicates if changes to the mapping region should be animated.
    description: |
        Setting this to 'false' will not stop the animation from clicking the My Location button,
        since that is native Android behavior.
    type: Boolean
    default: false

  - name: annotations
    summary: An array of annotations to add to the map.
    description: |
        There is no guarantee that the order of elements in the `annotations` property will be
        maintained when creating, adding or deleting annotations from the Ti.Map.View object.
        If the application depends on the annotations being in a set order, it should keep
        references to all of the annotations in a separate array.
    type: Array<Modules.Map.Annotation>

  - name: liteMode
    summary: Create a liteMode map version
    description: |
        When the `liteMode` is switched on the map will be displayed as a bitmap with limited interaction.
        Please refer to [Google developers documentation](https://developers.google.com/maps/documentation/android-sdk/lite)
        for more details.
    type: Boolean
    default: false
    since: "5.0.3"
    platforms: [android]
    availability: creation

  - name: mapType
    summary: |
        Map type constant, either <Modules.Map.NORMAL_TYPE>, <Modules.Map.SATELLITE_TYPE>,
        <Modules.Map.TERRAIN_TYPE>, <Modules.Map.HYBRID_TYPE>, <Modules.Map.HYBRID_FLYOVER_TYPE> or
        <Modules.Map.SATELLITE_FLYOVER_TYPE>.
    type: Number
    default: NORMAL_TYPE

  - name: zOrderOnTop
    summary: Controls wether the map view's surface is placed on top of its window.
    description: |
        Please refer to [zOrderOnTop](https://developers.google.com/maps/documentation/android/reference/com/google/android/gms/maps/GoogleMapOptions#zOrderOnTop(boolean))
        for more details.
    type: Boolean
    default: false
    availability: creation

  - name: region
    summary: |
        A dictionary specifying the location and zoom level of the map.
    type: MapRegionTypev2
    default: latitude 0, longitude 0

  - name: padding
    summary: Sets the distance between each edges of the view to the map controls.
    description: The map view controls may be obscured by other elements.
    since: "7.4.0"
    type: MapViewPadding

  - name: userLocation
    summary: |
        Boolean indicating if the user's current device location should be shown on the
        map.
    description: |
        If `true`, the user's location is marked with a pin, and the My Location button will appear in the top
        right corner of the screen. Starting in iOS 8, permissions must be added to tiapp.xml. Details in description.
    type: Boolean
    default: false

  - name: userLocationButton
    summary: |
        Enable or disables the My Location button. If the button is enabled, it is only shown when `userLocation`
        is enabled.
    description: |
        If `true`, the My Location button is enabled.
    type: Boolean
    default: true
    since: "3.1.1"
    platforms: [android]

  - name: compassEnabled
    summary: Enable or disables the compass button.
    type: Boolean
    default: true
    since: { android: "3.2.3", iphone: "6.1.0", ipad: "6.1.0", macos: "9.2.0" }
    osver: { ios: {min: "9.0"} }

  - name: mapToolbarEnabled
    summary: Enable or disables the map toolbar.
    type: Boolean
    default: true
    since: "6.1.0"
    platforms: [android]

  - name: enableZoomControls
    summary: |
        Enables or disables the built-in zoom controls.
    description: |
        If enabled, the zoom controls are a pair of buttons (one for zooming in, one for zooming out) that appear on the screen.
        When pressed, they cause the camera to zoom in (or out) by one zoom level. If disabled, the zoom controls are not shown.
    type: Boolean
    default: true
    platforms: [android]

  - name: maxZoomLevel
    summary: Returns the maximum zoom level available at the current camera position.
    description: |
        Returns the maximum zoom level for the current camera position.
        This takes into account what map type is currently being used.
        For example, satellite or terrain may have a lower max zoom level than the base map tiles.

        This will only give the correct value after the 'complete' event is fired.
    since: "3.2.3"
    type: Number
    platforms: [android]
    permission: read-only

  - name: minZoomLevel
    summary: Returns the minimum zoom level available at the current camera position.
    description: |
        Returns the minimum zoom level. This is the same for every location (unlike the maximum zoom level)
        but may vary between devices and map sizes.

        This will only give the correct value after the 'complete' event is fired.
    since: "3.2.3"
    type: Number
    platforms: [android]
    permission: read-only

  - name: minClusterSize
    summary: Sets the minium size of a cluster.
    description: |
        The minium cluster size is the smallest number of annotations that are merged together and
        (minClusterSize + 1) is the smallest number that will appear on the cluster.
    since: "5.2.0"
    type: Number
    default: 4
    platforms: [android]

  - name: zoom
    summary: Returns the current zoom level from the current camera position.
    description: |
        Returns the current zoom level from the current camera position.
        Note: This will only return the correct value once the `complete` event is fired.
    since: "7.1.0"
    type: Number
    platforms: [android]
    permission: read-only

  - name: traffic
    summary: Toggles the traffic layer on or off.
    description: |
        Set to `true` to display the traffic layer or `false` to hide it.
        This is subject to the availability of traffic data.
    type: Boolean
    default: false
    platforms: [android]

  - name: camera
    summary: The camera used for determining the appearance of the map.
    description: |
        A camera object defines a point above the map's surface from which to view the map. Applying a camera to a map has the
        effect of giving the map a 3D-like appearance. You can use a camera to rotate the map so that it is oriented to match
        the user's heading or to apply a pitch angle to tilt the plane of the map.

        Assigning a new camera to this property updates the map immediately and without animating the change. If you want to
        animate changes in camera position, use the `animateCamera` method instead.

        You must not set this property to null. To restore the map to a flat appearance, apply a camera with a pitch angle of 0,
        which yields a camera looking straight down onto the map surface.
    type: Modules.Map.Camera
    since: { android: "9.1.0", iphone: "3.2.0", ipad: "3.2.0", macos: "9.2.0" }

  - name: pitchEnabled
    summary: A Boolean value indicating whether the map camera's pitch information is used.
    description: |
        When this property is set to `true` and a valid camera is associated with the map,
        the camera's pitch angle is used to tilt the plane of the map. When this property
        is set to `false`, the camera's pitch angle is ignored and the map is always displayed
        as if the user is looking straight down onto it.
    type: Boolean
    since: "3.2.0"
    exclude-platforms: [android]

  - name: rotateEnabled
    summary: A Boolean value indicating whether the map camera's heading information is used.
    description: |
        When this property is set to `true` and a valid camera is associated with the map,
        the camera's heading angle is used to rotate the plane of the map around its center
        point. When this property is set to `false`, the camera's heading angle is ignored and the
        map is always oriented so that true north is situated at the top of the map view.
    type: Boolean
    since: "3.2.0"
    exclude-platforms: [android]

  - name: scrollEnabled
    summary: A Boolean value indicating whether the map can be scrolled by dragging gesture.
    description: |
        When this property is set to `true` the a map view can be panned or scrolled by dragging the map view.
    type: Boolean
    default: true
    since: { android: "8.0.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }

  - name: showsBuildings
    summary: A Boolean indicating whether the map displays extruded building information.
    description: |
        When this property is set to `true` and the camera has a pitch angle greater than zero,
        the map extrudes buildings so that they extend above the map plane, creating a 3D effect.
        The `mapType` property must be set to <Modules.Map.NORMAL_TYPE> for extruded buildings to be displayed.
    type: Boolean
    default: true
    since: "3.2.0"
    exclude-platforms: [android]

  - name: showsPointsOfInterest
    summary: A Boolean indicating whether the map displays point-of-interest information.
    description: |
        When this property is set to `true`, the map displays icons and labels for restaurants,
        schools, and other relevant points of interest.
    type: Boolean
    default: true
    since: "3.2.0"
    exclude-platforms: [android]

  - name: showsCompass
    summary: A Boolean indicating whether the map displays a compass control.
    description: |
        When this property is set to `true`, the map displays the control that lets users change the heading
        orientation of the map.
    type: Boolean
    osver: { ios: {min: "9.0"} }
    default: true
    deprecated:
        since: "6.1.0"
        notes: Please use [Modules.Map.View.compassEnabled](Modules.Map.View.compassEnabled) for parity instead.
    since: "5.2.0"
    exclude-platforms: [android]

  - name: showsScale
    summary: A Boolean indicating whether the map shows scale information.
    description: When this property is set to `true`, the map displays the scale information.
    type: Boolean
    osver: { ios: {min: "9.0"} }
    default: false
    since: "5.2.0"
    exclude-platforms: [android]

  - name: showsTraffic
    summary: A Boolean value indicating whether the map displays traffic information.
    description: |
        The mapType property must be set to <Modules.Map.NORMAL_TYPE> or <Modules.Map.HYBRID_TYPE> for
        traffic information to be shown.
    type: Boolean
    osver: { ios: {min: "9.0"} }
    default: false
    since: "5.2.0"
    exclude-platforms: [android]

  - name: style
    summary: JSON String to style the Map.
    description: |
        This property will change the look (colors, roads, labels) of the map. A valid JSON can be created
        at [Google Maps Styling Wizard](https://mapstyle.withgoogle.com/)
    type: String
    default: false
    since: "6.1.0"
    platforms: [android]

  - name: zoomEnabled
    summary: A Boolean value indicating whether the map can be zoomed by pinching or tapping.
    description: |
        When this property is set to `true` the a map view can be zoomed by pinching inwards to zoom out
        and reverse to zoom in. Zooming in can also be accoplished by double-tapping the map view. Zooming
        out can also be accomplished by two-finger tapping the map view.
    type: Boolean
    default: true
    since: { android: "8.0.0", iphone: "7.2.0", ipad: "7.2.0", macos: "9.2.0" }

  - name: indoorEnabled
    summary: A Boolean value indicating whether the indoor mapping is enabled.
    description: |
        This property is used to enabled/disable the indoor mapping feature of Google Maps.
        Changing the value after the MapView is drawn can cause flickering.
        You can read more at:
        [Google Indoor Maps](https://www.google.com/maps/about/partners/indoormaps/)
    type: Boolean
    default: true
    since: "7.5.0"
    platforms: [android]

---
name: MapViewPadding
summary: The padding applied to the map view using <Modules.Map.View.padding>.
properties:
  - name: top
    summary: Top padding of the map view.
    type: Number
  - name: left
    summary: Left padding of the map view.
    type: Number
  - name: bottom
    summary: Bottom padding of the map view.
    type: Number
  - name: right
    summary: Right padding of the map view.
    type: Number

---
name: MapRegionTypev2
summary: Simple object representing a map location and zoom level.
properties:
  - name: bearing
    summary: The direction in which a vertical line on the map points, measured in degrees clockwise from north.
    description: |
        For more details, see [Google Docs](https://developers.google.com/maps/documentation/android/views#the_camera_position).
        Cannot be used in conjunction with [longitudeDelta](MapRegionTypev2.longitudeDelta) or [latitudeDelta](MapRegionTypev2.latitudeDelta)
    type: Number
    since: "3.2.3"
    platforms: [android]

  - name: longitude
    summary: Longitude value for the center point of the map, in decimal degrees.
    type: Number

  - name: latitude
    summary: Latitude value for the center point of the map, in decimal degrees.
    type: Number

  - name: longitudeDelta
    summary: The amount of east-to-west distance displayed on the map, measured in decimal degrees.
    type: Number

  - name: latitudeDelta
    summary: The amount of north-to-south distance displayed on the map, measured in decimal degrees.
    type: Number

  - name: tilt
    summary: The camera's position on an arc between directly over the map's center position and the surface of the Earth, measured in degrees from the nadir.
    description: |
        For more details, see [Google Docs](https://developers.google.com/maps/documentation/android/views#the_camera_position).
        Cannot be used in conjunction with [longitudeDelta](MapRegionTypev2.longitudeDelta) or [latitudeDelta](MapRegionTypev2.latitudeDelta)
    type: Number
    since: "3.2.3"
    platforms: [android]

  - name: zoomLevel
    summary: The zoom level of the map.
    description: |
        For more details, see [Google Docs](https://developers.google.com/maps/documentation/android/views#zoom).
        Cannot be used in conjunction with [longitudeDelta](MapRegionTypev2.longitudeDelta) or [latitudeDelta](MapRegionTypev2.latitudeDelta)
    type: Number
    since: "5.0.2"
    platforms: [android]

  - name: selectableMapFeatures
    summary: The property that describes which selectable features the map responds to.
    description: |
      Pass one or more of <Modules.Map.FEATURE_TERRITORIES>, <Modules.Map.FEATURE_PHYSICAL_FEATURES>
      or <Modules.Map.FEATURE_TYPE_POINT_OF_INTEREST> as an array to make these features selectable.
    type: Array<Number>
    osver: { ios: { min: "16.0" } }
    platforms: [iphone, ipad, macos]
    since: "12.0.0"

---
name: MapLocationTypeV2
summary: |
    Simple object used as an argument to [setLocation](Modules.Map.View.setLocation).
properties:

  - name: longitude
    summary: Longitude value for the center point of the map, in decimal degrees.
    type: Number

  - name: latitude
    summary: Latitude value for the center point of the map, in decimal degrees.
    type: Number

  - name: longitudeDelta
    summary: The amount of east-to-west distance displayed on the map, measured in decimal degrees.
    type: Number

  - name: latitudeDelta
    summary: The amount of north-to-south distance displayed on the map, measured in decimal degrees.
    type: Number

  - name: animate
    summary: Set to `true` to animate the move to the new location.
    description: |
        If not set, the value of [animate](Modules.Map.View.animate) will be used.
    type: Boolean
since: "3.1.0"

---
name: CameraAnimationParams
summary: |
    Simple object used to control camera animations.
properties:

  - name: camera
    summary: <Modules.Map.Camera> to be animated to.
    type: Modules.Map.Annotation
    optional: false

  - name: duration
    summary: The amount of time (in milliseconds) that the animation will last.
    type: Number

  - name: curve
    summary: Animation curve or easing function to apply to the animation.
    description: |
        Specify one of the animation constants,
        <Titanium.UI.ANIMATION_CURVE_EASE_IN>,
        <Titanium.UI.ANIMATION_CURVE_EASE_IN_OUT>,
        <Titanium.UI.ANIMATION_CURVE_EASE_OUT>,
        or <Titanium.UI.ANIMATION_CURVE_LINEAR>.
    type: Number
since: "3.2.0"

---
name: ClusterAnnotationParams
summary: |
    Simple object used to create cluster annotation view.
exclude-platforms: [android]
since: "6.3.0"
properties:
  - name: memberAnnotations
    summary: |
      Array of Modules.Map.Annotation, which is recieved in event 'clusteringstarted' as
      memberAnnotations.
    type: Array<Modules.Map.Annotation>

  - name: annotation
    summary: |
      <Modules.Map.Annotation> instance, which you want to show as clustered annotation. There is no
      need to provide latitude and longitude as clustered annotation decides its location itself.
    type: Modules.Map.Annotation
